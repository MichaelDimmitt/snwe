import { MPDProtocol } from '../protocol';
export declare class StickerCommands {
    private protocol;
    constructor(protocol: MPDProtocol);
    /**
     * Reads a sticker value for the specified object.
     */
    getSticker(type: string, uri: string, name: string): Promise<string>;
    /**
     * Adds a sticker value to the specified object.
     * If a sticker item with that name already exists, it is replaced.
     */
    setSticker(type: string, uri: string, name: string, value: string): Promise<void>;
    /**
     * Deletes a sticker value from the specified object.
     * If you do not specify a sticker name, all sticker values are deleted.
     */
    deleteSticker(type: string, uri: string, name?: string): Promise<void>;
    /**
     * Lists the stickers for the specified object.
     * Returns a Map with sticker names as keys.
     */
    listStickers(type: string, uri: string): Promise<Map<string, string>>;
    /**
     * Searches the sticker database for stickers with the specified name,
     * below the specified directory (`uri`).
     * Returns a Map with the URIs of the matching songs as keys.
     */
    findStickers(type: string, uri: string, name: string, value?: string, operator?: '=' | '<' | '>'): Promise<Map<string, string>>;
}

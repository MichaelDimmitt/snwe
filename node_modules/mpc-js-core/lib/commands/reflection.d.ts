import { MPDProtocol } from '../protocol';
import { Decoder } from '../objects/decoder';
export declare class ReflectionCommands {
    private protocol;
    constructor(protocol: MPDProtocol);
    /**
     * Dumps configuration values that may be interesting for the client.
     * This command is only permitted to "local" clients (connected via UNIX domain socket).
     * The following response attributes are available:
     * * `music_directory`: The absolute path of the music directory.
     */
    config(): Promise<Map<string, string>>;
    /**
     * Shows which commands the current user has access to.
     */
    commands(): Promise<string[]>;
    /**
     * Shows which commands the current user has access to.
     */
    notCommands(): Promise<string[]>;
    /**
     * Shows a list of available song metadata.
     */
    tagTypes(): Promise<string[]>;
    /**
     * Gets a list of available URL handlers.
     */
    urlHandlers(): Promise<string[]>;
    /**
     * Returns a list of decoder plugins with their supported suffixes and MIME types.
     */
    decoders(): Promise<Decoder[]>;
}

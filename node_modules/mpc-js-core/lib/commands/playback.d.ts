import { MPDProtocol } from '../protocol';
export declare class PlaybackCommands {
    private protocol;
    constructor(protocol: MPDProtocol);
    /**
     * Begins playing the playlist at song number songPos.
     */
    play(songPos?: number): Promise<void>;
    /**
     * Begins playing the playlist at song with the given songid.
     */
    playId(songId: number): Promise<void>;
    /**
     * Plays the previous song in the playlist.
     */
    previous(): Promise<void>;
    /**
     * Plays the next song in the playlist.
     */
    next(): Promise<void>;
    /**
     * Seeks to the position time (in seconds; fractions allowed) of entry songPos in the playlist.
     */
    seek(songPos: number, time: number): Promise<void>;
    /**
     * Seeks to the position time (in seconds; fractions allowed) of song with the given songId.
     */
    seekId(songId: number, time: number): Promise<void>;
    /**
     * Seeks to the position time (in seconds; fractions allowed) within the current song.
     * If relative is true, then the time is relative to the current playing position.
     */
    seekCur(time: number, relative?: boolean): Promise<void>;
    /**
     * Pauses or resumes playback.
     */
    pause(pause?: boolean): Promise<void>;
    /**
     * Stops playing.
     */
    stop(): Promise<void>;
}

import { MPDProtocol } from '../protocol';
export declare class ClientToClientCommands {
    private protocol;
    constructor(protocol: MPDProtocol);
    /**
     * Subscribe to a channel. The channel is created if it does not exist already.
     * The name may consist of alphanumeric ASCII characters plus underscore, dash, dot and colon.
     */
    subscribe(channel: string): Promise<void>;
    /**
     * Unsubscribe from a channel.
     */
    unsubscribe(channel: string): Promise<void>;
    /**
     * Obtain a list of all channels.
     */
    channels(): Promise<string[]>;
    /**
     * Reads messages for this client. Returns a Map containing the messages grouped by channel name.
     */
    readMessages(): Promise<Map<string, string[]>>;
    /**
     * Send a message to the specified channel.
     */
    sendMessage(channel: string, text: string): Promise<void>;
}

/**
 * The current status of the player
 */
export declare class Status {
    state: 'play' | 'stop' | 'pause';
    /**
     * index of the currently playing or stopped on song within the playlist
     */
    song: number;
    /**
     * playlist songid of the currently playing or stopped on song
     */
    songId: number;
    /**
     * index of the next song within the playlist
     */
    nextSong: number;
    /**
     * playlist songid of the next song
     */
    nextSongId: number;
    /**
     * total time elapsed within the current song in seconds
     */
    elapsed: number;
    /**
     * duration of the current song in seconds
     */
    duration: number;
    /**
     * current bitrate in kbps
     */
    bitRate: number;
    /**
     *  The format emitted by the decoder plugin during playback, format: "samplerate:bits:channels".
     */
    audio: string;
    sampleRate: number | undefined;
    bitDepth: number | undefined;
    channels: number | undefined;
    /**
     * 0-100
     */
    volume: number;
    /**
     * crossfade in seconds
     */
    xfade: number;
    /**
     * mixramp threshold in dB
     */
    mixrampdb: number;
    /**
     * mixramp delay in seconds
     */
    mixrampDelay: number;
    /**
     * 31-bit unsigned integer, the playlist version number
     */
    playlistVersion: number;
    playlistLength: number;
    repeat: boolean;
    random: boolean;
    single: boolean;
    consume: boolean;
    /**
     * update job id
     */
    updating: number;
    error: string;
    constructor(valueMap: Map<string, string>);
}
